1.ThreadLocal原理
2.Redis哨兵原理 【https://mp.weixin.qq.com/s/ykZv3Z3kqxxhoD_gpa1z7Q】
{
    1.主从结构，某一从节点失效后如何处理？
    补足数据：runtimeID【随机ID - 集群内统一使用】+ 游标【偏移量】

    2.主节点挂了怎么办？
    哨兵【管理员 - 不干活，就管理】集群中选出一个Leader【第一个发现节点挂了，且超过一半哨兵同意的哨兵】去重新指派主节点，择优选取主节点
    ①选举新的主节点
    ②其他从节点从【新主节点】中同步数据
    ③将旧的主节点【挂掉的】改成从节点

    重新选主规则：
    优先级 高 - 性能好的从节点
    偏移量 多

}

3.LinkedHashMap怎么实现有序的
{
    在HashMap的基础上【数组+链表】，又维护了双向链表；
    也就是数据结构为：【数组+单链表+双链表】
}

4.静态多分派【重载】、动态单分派【重写】
{
    https://www.jianshu.com/p/46b2b2ed25d1?utm_campaign=haruki&utm_content=note&utm_medium=reader_share&utm_source=weixin
    宗量：方法调用者、方法参数
    看多分派还是单分派，要考虑全场景，也就是说 [既要有重写又要有重载] 的场景下，去分析能调用到某一方法需要几个宗量
}
