<?xml version="1.0" encoding="UTF-8" ?>

<!-- 暂时使用同步日志，调优可放开异步日志 -->
<configuration>

    <conversionRule conversionWord="clr" converterClass="org.springframework.boot.logging.logback.ColorConverter" />
    <conversionRule conversionWord="wex" converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter" />
    <conversionRule conversionWord="wEx" converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter" />
    <property name="CONSOLE_LOG_PATTERN" value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"/>
<!--    <property name="log.path" value="logs" />-->

    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>
                %-5level [%d{yyyy-MM-dd-HH:mm:ss}] [%16thread] %-55logger{35} : %5L %msg%n
            </pattern>
        </layout>
    </appender>

    <appender name="fileInfoLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
<!--            <level>ERROR</level>-->
<!--            <onMatch>DENY</onMatch>-->
<!--            <onMismatch>ACCEPT</onMismatch>-->
        </filter>
        <encoder>
            <pattern>
                %-5level [%d{yyyy-MM-dd-HH:mm:ss}] [%16thread] %-55logger{35} : [%5L] %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>/Users/mac/Documents/bdjl/tsc/logs/info.%d.log</fileNamePattern>
<!--            <fileNamePattern>/home/tsc/logs/info.%d.log</fileNamePattern>-->
        </rollingPolicy>
    </appender>


    <appender name="fileErrorLog" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
        </filter>
        <encoder>
            <pattern>
                %-5level [%d{yyyy-MM-dd-HH:mm:ss}] [%16thread] %-55logger{35} : [%5L] %msg%n
            </pattern>
        </encoder>
        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--路径-->
            <fileNamePattern>/Users/mac/Documents/bdjl/tsc/logs/error.%d.log</fileNamePattern>
<!--            <fileNamePattern>/home/tsc/logs/error.%d.log</fileNamePattern>-->
        </rollingPolicy>
    </appender>

    <!--设置为OFF,即屏蔽; 留下sqltiming作为INFO级别输出-->
<!--    作用在于 children-logger是否使用 rootLogger配置的appender进行输出。-->
<!--    false：表示只用当前logger的appender-ref。-->
<!--    true：表示当前logger的appender-ref和rootLogger的appender-ref都有效。-->
    <logger name="jdbc.sqltiming" additivity = "false" level="INFO">
        <appender-ref ref="consoleLog" />
    </logger>
    <logger name="jdbc.connection" level="ERROR"/>
    <logger name="jdbc.resultset" level="ERROR"/>
    <logger name="jdbc.resultsettable" level="ERROR"/>
    <logger name="jdbc.audit" level="ERROR"/>
    <logger name="jdbc.sqltiming" level="INFO"/>
    <logger name="jdbc.sqlonly" level="ERROR"/>

    <root level="info">
        <appender-ref ref="consoleLog" />
        <appender-ref ref="fileInfoLog" />
        <appender-ref ref="fileErrorLog" />
    </root>

</configuration>