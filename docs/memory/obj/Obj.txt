https://blog.csdn.net/liujianyangbj/article/details/108049482  【对象结构 & 32G的由来】
https://blog.csdn.net/liujianyangbj/article/details/108074167 【32位CPU最多支持4G内存是怎么算出来的】
常识：1byte = 255；
思维：【寻址能力是不变的，可变的是单位】
32位【4 * 8bit = 4byte】寻址能力：可以表示 - 2^32种情况【地址】  ==>   明细：32位【bit】操作系统，最多表示的地址为：2^32【 磁条 | 2表示：0 or 1 | 】 = 2^2 * 2^10【K】 * 2^10【M】 * 2^10【G】= 4G （种）

计算机的最小单位【IO最小单位】：Byte 【2^32 = 4GB】
JVM对象布局【对齐单位】：8Byte 【2^32 * 8Byte = 32G】

①一个Object对象大小是多少byte？
答:16byte，压缩：有4byte用于空闲对齐，非压缩：全部使用

②压缩指针，又没有压缩对象，它不应该增加 | 减少 ？
答：对象中的指针(field)占的空间也不小了，压缩情况 4byte = 32bit，不压缩情况 8byte = 64bit

③为什么说JVM内存最好不要超过32G？
原因：超过32G会导致指针不压缩，指针大小增大【4byte -> 8byte】，CPU寄存器缓存数量减少，效率下降;
 